name: "CaffeNetEntropyDIAL"
### TRAIN DATA LAYERS
layer {
  name: "data-source"
  type: "ImageData"
  top: "data-source"
  top: "labels"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  image_data_param {
    source: "./examples/_temp/file_list.txt"
    #root_folder: "%SOURCE_ROOT%"
    batch_size: 64
    new_height:256
    new_width:256
    shuffle: true
  }
}
layer {
  name: "data-target"
  type: "ImageData"
  top: "data-target"
  top: "labels-target"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  image_data_param {
    source: "./data/office/dslr_list.txt"
    #root_folder: "%TARGET_ROOT%"
    batch_size: 64
    new_height:256
    new_width:256
    shuffle: true
  }
}
layer {
  name: "data-target-silence"
  type: "Silence"
  bottom: "labels-target"
  include {
    phase: TRAIN
  }
}
layer {
  name: "data-concat"
  type: "Concat"
  bottom: "data-source"
  bottom: "data-target"
  top: "data"
  include {
    phase: TRAIN
  }
  concat_param {
    axis: 0
  }
}

### TEST DATA LAYERS
layer {
  name: "data-test"
  type: "ImageData"
  top: "data-test"
  top: "labels"
  include {
    phase: TEST
  }
  transform_param {
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  image_data_param {
    source: "./data/office/dslr_list.txt"
    #root_folder: "%TEST_ROOT%"
    batch_size: 1
    new_height:256
    new_width:256
    shuffle: false
  }
}
layer {
  name: "data-test-reference"
  type: "DummyData"
  top: "data-test-reference"
  include {
    phase: TEST
  }
  dummy_data_param {
    shape {
      dim: 1
      dim: 1
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "data-test-crop"
  type: "Crop"
  bottom: "data-test"
  bottom: "data-test-reference"
  top: "data"
  include {
    phase: TEST
  }
  crop_param {
    offset: 14
  }
}

### CONVOLUTIONAL PART
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

### FULLY-CONNECTED PART
# FC6
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "fc6-dial"
  type: "Dial"
  bottom: "fc6"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  dial_param {
    weight_filler {
      type: "constant"
      value: 1
    }
    slice_point: 64
    #moving_average_fraction: 0.95
  }
}
layer {
  name: "fc6-sc"
  type: "Scale"
  bottom: "fc6"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    bias_term: true
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
# FC7
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "fc7-dial"
  type: "Dial"
  bottom: "fc7"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  dial_param {
    weight_filler {
      type: "constant"
      value: 1
    }
    slice_point: 64
    #moving_average_fraction: 0.95
  }
}
layer {
  name: "fc7-sc"
  type: "Scale"
  bottom: "fc7"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    bias_term: true
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
# FC8
layer {
  name: "fc8-new"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 31
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "fc8-dial"
  type: "Dial"
  bottom: "fc8"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  dial_param {
    weight_filler {
      type: "constant"
      value: 1
    }
    slice_point: 64
    #moving_average_fraction: 0.95
  }
}
layer {
  name: "fc8-sc"
  type: "Scale"
  bottom: "fc8"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    bias_term: true
  }
}

### LOSS TRAIN
layer {
  name: "fc8-slice"
  type: "Slice"
  bottom: "fc8"
  top: "fc8-source"
  top: "fc8-target"
  include {
    phase: TRAIN
  }
  slice_param {
    slice_point: 64
    axis: 0
  }
}
layer {
  name: "loss-source"
  type: "SoftmaxWithLoss"
  bottom: "fc8-source"
  bottom: "labels"
  top: "loss-source"
  include {
    phase: TRAIN
  }
}
layer {
  name: "loss-target"
  type: "EntropyLoss"
  bottom: "fc8-target"
  top: "loss-target"
  loss_weight: 0.1
  include {
    phase: TRAIN
  }
}

### LOSS TEST
layer {
  name: "loss-test"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "labels"
  top: "loss-test"
  include {
    phase: TEST
  }
}
layer {
  name: "accuracy-test"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "labels"
  top: "accuracy"
  include {
    phase: TEST
  }
}
